#ifndef _HMI_DRIVER_
#define _HMI_DRIVER_

#include "hmi_user_uart.h"

enum CtrlType
{
	kCtrlUnknown = 0x0,
	kCtrlButton = 0x10, //按钮
	kCtrlText,  //文本
	kCtrlProgress,  //进度条
	kCtrlSlider,    //滑动条
	kCtrlMeter,  //仪表
	kCtrlAnimation = 0x26, //动画或图标
	kCtrlMenu = 0x1A, //动画或图标
	kCtrlCounter = 0x17, //动画或图标

};

enum CtrlMsgType
{
	kCtrlMsgSetCurrentScreen = 0x00, //设置当前画面ID，用于切换画面
	kCtrlMsgGetCurrentScreen = 0x01, //主机请求获取当前画面ID

	kCtrlMsgSetFoucus = 0x02, //设置输入焦点
	kCtrlMsgSetVisible = 0x03, //设置控件是否可见

	kCtrlMsgSetData = 0x10, //设置控件的数值
	kCtrlMsgGetData = 0x11, //主机请求获取控件的数值
	kCtrlMsgGetMenuData = 0x14, //菜单选项控制

	kCtrlMsgAnimationStart = 0x20, //动画-开始自动播放
	kCtrlMsgAnimationStop = 0x21, //动画-停止自动播放
	kCtrlMsgAnimationPause = 0x22, //动画-暂停自动播放
	kCtrlMsgAnimationPlayFrame = 0x23, //动画-播放指定帧
	kCtrlMsgAnimationPlayPrev = 0x24, //动画-播放下一帧
	kCtrlMsgAnimationPlayNext = 0x25, //动画-播放上一帧
	kCtrlMsgAnimationNotify = 0x26, //动画-事件通知:0弹起,1按下
	kCtrlMsgAnimationEnd = 0x27, //动画-事件通知:0弹起,1按下
	kCtrlMsgCountdownEnd = 0x43, //倒计时结束事件通知:


	kCtrlMsgGraphChannelAdd = 0x30, //EE B1 30 CHANNEL(UINT8) COLOR(UINT16) FF FC FF FF
	kCtrlMsgGraphChannelDel = 0x31, //EE B1 31 CHANNEL(UINT8) FF FC FF FF
	kCtrlMsgGraphChannelDataAdd = 0x32, //EE B1 CHANNEL(UINT8) 32 DATA_LEN(UINT16) DATA(UINT8 *) FF FC FF FF
	kCtrlMsgGraphChannelDataClear = 0x33, //EE B1 CHANNEL(UINT8) 33 FF FC FF FF
	kCtrlMsgGraphSetViewport = 0x34,	//EE B1 34 X_OFFSET(INT16) X_MUL(UINT16) Y_OFFSET(INT16) Y_MUL(UINT16) FF FC FF FF
};

/****************************************************************************
* 名称： SendBeginCMD
* 功能： 发送帧头命令
* 参数： 无
****************************************************************************/
void SendBeginCMD ( void );

/****************************************************************************
* 名称： SendEndCmd
* 功能： 发送帧尾命令
* 参数： 无
****************************************************************************/
void SendEndCmd ( void );

/****************************************************************************
* 名称： SetHandShake
* 功能： 握手
* 参数： 无
* 返回： 无
****************************************************************************/
void SetHandShake ( void );

/****************************************************************************
* 名称： SetDeviceReset
* 功能： 复位串口屏
* 参数： 无
* 返回： 无
****************************************************************************/
void SetDeviceReset ( void );

/****************************************************************************
* 名称： SetFcolor
* 功能： 设置前景色
* 参数： fcolor  前景色RGB参数
****************************************************************************/
void SetFcolor ( uint16 fcolor );

/****************************************************************************
* 名称： SetBcolor()
* 功能： 设置背景色
* 参数： bcolor-背景色RGB参数
****************************************************************************/
void SetBcolor ( uint16 bcolor );

/****************************************************************************
* 名称： GUI_CleanScreen()
* 功能： 清屏
****************************************************************************/
void GUI_CleanScreen ( void );

/****************************************************************************
* 名称： SetTextSpace()
* 功能： 设置文字行列间距
* 参数： x_w，以点为单位的行间距，取值范围00~1F
* 参数： y_w，以点为单位的列间距，取值范围00~1F
****************************************************************************/
void SetTextSpace ( uint8 x_w, uint8 y_w );

/****************************************************************************
* 名称： DisText_Region()
* 功能： 限定文本显示范围
* 参数： x ，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： length，文本框限定的长度
* 参数： width，文本框限定的高度
****************************************************************************/
void SetFont_Region ( uint8 enable, uint16 length, uint16 width );

/****************************************************************************
* 名称： SetFilterColor()
* 功能： 设置过滤颜色
* 参数： fillcolor_dwon，滤除颜色的下限值
* 参数： fillcolor_up，滤除颜色的上限值
****************************************************************************/
void SetFilterColor ( uint16 fillcolor_dwon, uint16 fillcolor_up );

/****************************************************************************
* 名称： DisText()
* 功能： 文本显示
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： back，背景色使能
* 参数： font ，字库编码
* 参数： strings，写入的汉字字符串
****************************************************************************/
void DisText ( uint16 x, uint16 y, uint8 back, uint8 font, uchar *strings );

/****************************************************************************
* 名称： DisData()
* 功能： 数据显示
* 参数： x ，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： back，背景色使能
* 参数： font，字库编码
* 参数： sdata，写入的数据
****************************************************************************/
void DisData ( uint16 x, uint16 y, uint8 back, uint8 font, uchar sdata );

/****************************************************************************
* 名称： DisCursor()
* 功能： 光标显示
* 参数： enable
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： length，光标长度
* 参数： width，光标宽度
****************************************************************************/
void DisCursor ( uint8 enable, uint16 x, uint16 y, uint8 length, uint8 width );

/****************************************************************************
* 名称： DisFull_Image()
* 功能： 全屏整幅图显示
* 参数： image_id，图片ID编号
* 参数： masken，屏蔽色使能
****************************************************************************/
void DisFull_Image ( uint16 image_id, uint8 masken );


/****************************************************************************
* 名称： DisArea_Image()
* 功能： 区域图片显示
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： image_id，图片ID编号
* 参数： masken，屏蔽色使能
****************************************************************************/
void DisArea_Image ( uint16 x, uint16 y, uint16 image_id, uint8 masken );

/****************************************************************************
* 名称： DisCut_Image()
* 功能： 图片剪切
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： image_id，图片编号
* 参数： image_x，图片内部X坐标
* 参数： image_y，图片内部Y坐标
* 参数： image_l，剪切长度
* 参数： image_w，剪切宽度
* 参数： masken，屏蔽色使能
****************************************************************************/
void DisCut_Image ( uint16 x, uint16 y, uint16 image_id, uint16 image_x, uint16 image_y,
					uint16 image_l, uint16 image_w, uint8 masken );
//显示动画并播放EE EE 80 00 10 01 10 00 04 01 05 FF FC FF FF
//播放结束EE 02 FF FC FF FF
//DisFlashImage(748,59,4,1,5)循环5次
/****************************************************************************
* 名称： DisFlashImgae()
* 功能： 动画显示
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
* 参数： flashimage_id，GIF动画ID编号
****************************************************************************/
void DisFlashImage ( uint16 x, uint16 y, uint16 flashimage_id, uint8 enable, uint8 playnum );
/****************************************************************************
* 名称： GUI_FcolorDot()
* 功能： 以背景色画点
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
****************************************************************************/
void GUI_BcolorDot ( uint16 x, uint16 y );

/****************************************************************************
* 名称： GUI_FcolorDot()
* 功能： 以前景色画点
* 参数： x，以点为单位的X轴坐标值
* 参数： y，以点为单位的Y轴坐标值
****************************************************************************/
void GUI_FcolorDot ( uint16 x, uint16 y );

/****************************************************************************
* 名称： GUI_Line()
* 功能： 画线
* 参数： x0，以点为单位的X轴坐标值
* 参数： y0，以点为单位的Y轴坐标值
* 参数： x1，以点为单位的X轴坐标值
* 参数： y1，以点为单位的Y轴坐标值
****************************************************************************/
void GUI_Line ( uint16 x0, uint16 y0, uint16 x1, uint16 y1 );

/****************************************************************************
* 名称： GUI_ConSpaceDots()
* 功能： 将指定的多个等间隔X轴坐标点快速连接起来
* 参数： x，以点为单位的X轴坐标值
* 参数： x，以点为单位的X轴坐标值
* 参数： Xspace，以点为单位的X轴间隔值
* 参数： y1，以点为单位的Y轴坐标值，各间隔点的Y坐标
****************************************************************************/

void GUI_ConSpaceDots ( uint16 x, uint16 Xspace, uint8 *pDot, uint16 dot_cnt );

/****************************************************************************
* 名称： GUI_FcolorConOffsetDots()
* 功能： 按照坐标偏移量用前景色连线
* 参数： x，以点为单位的X轴坐标值
* 参数： Xspace，以点为单位的X轴间隔值
* 参数： dot_cnt，点的对数(x,y)两个点算一对
****************************************************************************/
void GUI_FcolorConOffsetDots ( uint16 x, uint16 y, uint8 *dot_offset, uint16 dot_cnt );

/****************************************************************************
* 名称： GUI_FcolorConOffsetDots()
* 功能： 按照坐标偏移量用背景色连线
* 参数： x，以点为单位的X轴坐标值
* 参数： Xspace，以点为单位的X轴间隔值
* 参数： dot_cnt，点的对数(x,y)两个点算一对
****************************************************************************/
void GUI_BcolorConOffsetDots ( uint16 x, uint16 y, uint8 *dot_offset, uint16 dot_cnt );

/****************************************************************************
* 名称： GUI_FcolorConDots()
* 功能： 按照坐标点用前景色连线
* 参数    *dot  指向坐标对的指针
* 参数： dot_cnt，点的对数(x,y)两个点算一对
****************************************************************************/
void GUI_FcolorConDots ( uint16 *dot, uint16 dot_cnt );

/****************************************************************************
* 名称： GUI_FcolorConDots()
* 功能： 按照坐标点用背景色连线
* 参数   *dot  指向坐标对的指针
* 参数： dot_cnt，点的对数(x,y)两个点算一对
****************************************************************************/

void GUI_BcolorConDots ( uint16 *dot, uint16 dot_cnt );
/****************************************************************************
* 名称： GUI_Circle()
* 功能： 画空心圆
* 参数： x0，以点为单位的X轴坐标值
* 参数： y0，以点为单位的Y轴坐标值
* 参数： r，空心圆的半径
****************************************************************************/
void GUI_Circle ( uint16 x0, uint16 y0, uint16 r );

/****************************************************************************
* 名称： GUI_CircleFill()
* 功能： 画实心圆
* 参数： x0，以点为单位的X轴坐标值
* 参数： y0，以点为单位的Y轴坐标值
* 参数： r，实心圆的半径
****************************************************************************/
void GUI_CircleFill ( uint16 x0, uint16 y0, uint16 r );

/****************************************************************************
* 名称： GUI_Arc
* 功能： 绘制弧线
* 参数： x，圆弧中心X坐标
* 参数： y，圆弧中心Y坐标
* 参数： sa，圆弧起始角度
* 参数： ea，圆弧结束角度
****************************************************************************/
void GUI_Arc ( uint16 x, uint16 y, uint16 r, uint16 sa, uint16 ea );

/****************************************************************************
* 名称： GUI_Rectangle()
* 功能： 画空心矩形
* 参数： x0，以点为单位的空心矩形左上角X坐标值
* 参数： y0，以点为单位的空心矩形左上角Y坐标值
* 参数： x1，以点为单位的空心矩形右下角X坐标值
* 参数： y1，以点为单位的空心矩形右下角Y坐标值
****************************************************************************/
void GUI_Rectangle ( uint16 x0, uint16 y0, uint16 x1, uint16 y1 );

/****************************************************************************
* 名称： RectangleFill()
* 功能： 画实心矩形
* 参数： x0，以点为单位的实心矩形左上角X坐标值
* 参数： y0，以点为单位的实心矩形左上角Y坐标值
* 参数： x1，以点为单位的实心矩形右下角X坐标值
* 参数： y1，以点为单位的实心矩形右下角Y坐标值
****************************************************************************/
void GUI_RectangleFill ( uint16 x0, uint16 y0, uint16 x1, uint16 y1 );

/****************************************************************************
* 名称： GUI_Ellipse()
* 功能： 画空心椭圆
* 参数： x0，以点为单位的空心椭圆最左端X坐标值
* 参数： y0，以点为单位的空心椭圆最上端Y坐标值
* 参数： x1，以点为单位的空心椭圆最右端X坐标值
* 参数： y1，以点为单位的空心椭圆最下端Y坐标值
****************************************************************************/
void GUI_Ellipse ( uint16 x0, uint16 y0, uint16 x1, uint16 y1 );

/****************************************************************************
* 名称： GUI_EllipseFill()
* 功能： 画实心椭圆
* 参数： x0，以点为单位的实心椭圆最左端X坐标值
* 参数： y0，以点为单位的实心椭圆最上端Y坐标值
* 参数： x1，以点为单位的实心椭圆最右端X坐标值
* 参数： y1，以点为单位的实心椭圆最下端Y坐标值
****************************************************************************/
void GUI_EllipseFill ( uint16 x0, uint16 y0, uint16 x1, uint16 y1 );

/****************************************************************************
* 名称： SetBackLight()
* 功能： 背光调节
* 参数： light_level
****************************************************************************/
void SetBackLight ( uint8 light_level );
/****************************************************************************
* 名称： SetPowerSaving()
* 功能： 自动背光调节
* 参数： enable ：1 打开自动背光使能打开，0：关闭自动背光调节功能
* 参数   bl_off_level: 背光变暗的亮度
* 参数   bl_on_level ：背光变亮的亮度
* 参数   bl_on_time：：背光调节的时间（触摸屏多久没有被按下背光自动变暗的时间）

****************************************************************************/
void SetPowerSaving ( uint8 enable, uint8 bl_off_level, uint8 bl_on_level, uint8  bl_onime );

/****************************************************************************
* 名称： SetMatrixKB()
* 功能： 矩阵键盘的工作方式设置
* 参数： cmd
****************************************************************************/
void SetMatrixKB ( uint8 cmd );

/****************************************************************************
* 名称： WriteAddrdData()
* 功能： 往串口屏FLASH里面写数据
* 参数：  Addr 写入的地址
* 参数： pData 指向写入数据的指针
* 参数： dat_len 数据个数
****************************************************************************/
void WriteAddrdData ( uint32 Addr, uint8 *pData, uint16 dat_len );

/****************************************************************************
* 名称： ReadAddrdData()
* 功能： 往串口屏FLASH里面读出数据
* 参数： 读出的地址
* 参数： dat_len 数据个数
****************************************************************************/
void ReadAddrdData ( uint32 Addr, uint16 Len );
/****************************************************************************
* 名称： SavePrintscreen_Into_Flash()
* 功能： 保存当前屏幕画面到FLASH（截屏）
* 参数： pic_id 保存图片的编号
****************************************************************************/
void SavePrintscreen_Into_Flash ( uint8 Pic_id );
/****************************************************************************
* 名称： SavePrintscreen_Into_Flash()
* 功能： 显示截屏的画面
* 参数： pic_id 截屏图片的编号
****************************************************************************/
void DisplayPrintscreen_In_Flash ( uint8 Pic_id );

/****************************************************************************
* 名称： SetBuzzer
* 功能： 蜂鸣器响一声
* 参数： time，持续时间
****************************************************************************/
void SetBuzzer ( uint8 time );

/****************************************************************************
* 名称： TestTouchScreen
* 功能： 测试触摸屏
****************************************************************************/
void TestTouchScreen ( void );

/****************************************************************************
* 名称： SetCommBps()
* 功能： 设置通讯波特率
* 参数： Baud
****************************************************************************/
void SetCommBps ( uint8 baudset );

/****************************************************************************
* 名称： WriteLayer
* 功能： 设置写入图层
* 参数： layer
****************************************************************************/
void WriteLayer ( uint8 layer );

/****************************************************************************
* 名称： DisplyLayer
* 功能： 设置显示图层
* 参数： layer
****************************************************************************/
void DisplyLayer ( uint8 layer );

/****************************************************************************
* 名称： ClearLayer
* 功能： 清除指定图层，变透明
* 参数： layer
****************************************************************************/
void ClearLayer ( uint8 layer );

/****************************************************************************
* 名称： CopyLayer
* 功能： 图层拷贝
* 参数： src_layer，原始图层
* 参数： dest_layer，目标图层
****************************************************************************/
void CopyLayer ( uint8 src_layer, uint8 dest_layer );

/****************************************************************************
* 名称： SetRTCTime
* 功能： 设置RTC时间
* 参数： sec,min,hour 秒 分 时
* 参数   day week mon year 天 星期 月 年
****************************************************************************/
void SetRTCTime ( uint8 sec, uint8 min, uint8 hour, uint8 day, uint8 week, uint8  mon, uint8  year );

/****************************************************************************
* 名称： ReadRTCTime
* 功能： 读取RTC时间
* 参数： 无
* 参数
****************************************************************************/
void ReadRTCTime ( void );

/****************************************************************************
* 名称： SetCountDown
* 功能： 设置倒计时
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： Count 秒数 一共3600秒
****************************************************************************/
void SetCountDown ( uint16 screen_id, uint16 control_id, uint32 value );


/****************************************************************************
* 名称： CountDownStart
* 功能： 启动倒计时控件
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void CountDownStart ( uint16 screen_id, uint16 control_id );


/****************************************************************************
* 名称： CountDownStop
* 功能： 停止倒计时控件
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void CountDownStop ( uint16 screen_id, uint16 control_id );


/****************************************************************************
* 名称： Locksysconfig
* 功能： 锁定系统配置，使得不能通过串口指令来修改配置
* 参数： 无
* 参数
****************************************************************************/
void Locksysconfig ( void );

/****************************************************************************
* 名称： Unlocksysconfig
* 功能： 解决锁定系统配置，使得可以通过串口指令来修改配置
* 参数： 无
* 参数
****************************************************************************/
void Unlocksysconfig ( void );
/****************************************************************************
* 名称： SetScreen()
* 功能： 切换画面
* 参数： screen_id，目标画面ID
****************************************************************************/
void SetScreen ( uint16 screen_id );

/****************************************************************************
* 名称： SetScreenUpdate
* 功能： 禁止/使能画面更新
* 参数： enable，1使能，0禁止
****************************************************************************/
void SetScreenUpdate ( uint8 enable );

/****************************************************************************
* 名称： GetScreen()
* 功能： 异步获取当前画面ID
* 参数： 无
****************************************************************************/
void GetScreen ( void );

/****************************************************************************
 * 名称： AutoClearLayer_en()
 * 功能： 设置切换画面时是否需要自动清除当前用户层
 * 参数： enable 1: 自动清除图层，0 禁止清除图层
****************************************************************************/
void AutoClearLayer_en ( uint8 enable );

/****************************************************************************
* 名称： ShowControl
* 功能： 显示/隐藏控件
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： visible，0隐藏，1显示
****************************************************************************/
void ShowControl ( uint16 screen_id, uint16 control_id, uint8 visible );

/****************************************************************************
* 名称： GetControlValue()
* 功能： 异步获取控件数值
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void GetControlValue ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： SetButtonValue()
* 功能： 设置按钮控件的状态值
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： value，按钮状态-0弹起，1按下
****************************************************************************/
void SetButtonValue ( uint16 screen_id, uint16 control_id, uchar value );

/****************************************************************************
* 名称： SetTextValue()
* 功能： 设置文本控件的显示文字
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： str，显示文字
****************************************************************************/
void SetTextValue ( uint16 screen_id, uint16 control_id, uchar *str );

/****************************************************************************
* 名称： SetProgressValue()
* 功能： 设置进度条控件的数值
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： value，进度位置
****************************************************************************/
void SetProgressValue ( uint16 screen_id, uint16 control_id, uint32 value );

/****************************************************************************
* 名称： SetMeterValue()
* 功能： 设置仪表控件的数值
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： value，指针位置
****************************************************************************/
void SetMeterValue ( uint16 screen_id, uint16 control_id, uint32 value );

/****************************************************************************
* 名称： SetSliderValue
* 功能： 设置滑块控件的数值
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： value，滑块位置
****************************************************************************/
void SetSliderValue ( uint16 screen_id, uint16 control_id, uint32 value );

/****************************************************************************
* 名称： AnimationStart
* 功能： 开启自动播放动画
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void AnimationStart ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： AnimationStop
* 功能： 停止自动播放动画
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void AnimationStop ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： AnimationPause
* 功能： 暂停自动播放动画
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void AnimationPause ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： AnimationPlayFrame
* 功能： 播放指定帧
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： frame_id，待播放的帧ID
****************************************************************************/
void AnimationPlayFrame ( uint16 screen_id, uint16 control_id, uint8 frame_id );

/****************************************************************************
* 名称： AnimationPlayPrev
* 功能： 播放动画的上一帧
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void AnimationPlayPrev ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： AnimationPlayNext
* 功能： 播放动画的下一帧
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
****************************************************************************/
void AnimationPlayNext ( uint16 screen_id, uint16 control_id );

/****************************************************************************
* 名称： GraphChannelAdd
* 功能： 添加指定颜色的数据通道
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： channel，数据通道（0~7）
* 参数： color，通道颜色
****************************************************************************/
void GraphChannelAdd ( uint16 screen_id, uint16 control_id, uint8 channel, uint16 color );

/****************************************************************************
* 名称： GraphChannelDel
* 功能： 删除指定数据通道
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： channel，数据通道（0~7）
****************************************************************************/
void GraphChannelDel ( uint16 screen_id, uint16 control_id, uint8 channel );

/****************************************************************************
* 名称： GraphChannelDataAdd
* 功能： 指定数据通道添加数据
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： channel，数据通道（0~7）
* 参数： pData，数据缓冲区
* 参数： nDataLen，数据字节长度
****************************************************************************/
void GraphChannelDataAdd ( uint16 screen_id, uint16 control_id, uint8 channel, uint8 *pData, uint16 nDataLen );

/****************************************************************************
* 名称： GraphChannelDataInsert
* 功能： 指定数据通道插入数据
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： channel，数据通道（0~7）
* 参数： pData，数据缓冲区
* 参数： nDataLen，数据字节长度
****************************************************************************/
void GraphChannelDataInsert ( uint16 screen_id, uint16 control_id, uint8 channel, uint8 *pData, uint16 nDataLen );

/****************************************************************************
* 名称： GraphChannelDataClear
* 功能： 清除指定数据通道
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： channel，数据通道（0~7）
****************************************************************************/
void GraphChannelDataClear ( uint16 screen_id, uint16 control_id, uint8 channel );

/****************************************************************************
* 名称： GraphChannelDataClear
* 功能： 清除指定数据通道
* 参数： screen_id，目标画面ID
* 参数： control_id，目标控件ID
* 参数： x_offset，水平偏移
* 参数： x_mul，水平缩放系数，单位0.01
* 参数： y_offset，垂直偏移
* 参数： y_mul，垂直缩放系数，单位0.01
****************************************************************************/
void GraphSetViewport ( uint16 screen_id, uint16 control_id, int16 x_offset, uint16 x_mul, int16 y_offset, uint16 y_mul );
void SetTextBlink ( uint16 screen_id, uint16 control_id, uint8 period );
void SetTexFrontColor(uint16 screen_id,uint16 control_id,uint16 color);
void SetSliderFrontColor(uint16 screen_id,uint16 control_id,uint16 color);
void SetTimer(uint16 screen_id,uint16 control_id,uint32 sec);
void SatrtTimer(uint16 screen_id,uint16 control_id);
void StopTimer(uint16 screen_id,uint16 control_id);
void PauseTimer(uint16 screen_id,uint16 control_id);
void SetTexFrontBColor(uint16 screen_id,uint16 control_id,uint16 color);//设置文本背景
// 修改连续的同一页的多个文本框 DATA两位
void SetMulSerialText(uint16 screen_id,uint16 control_id,uint8 Num,uint16* Data);
// 修改连续的同一页的多个文本框 DATA四位
void SetMulSerialText2(uint16 screen_id,uint16 control_id,uint8 Num,uint32* Data);

#endif
